{"version":3,"sources":["webpack:///../src/attacks_explained/prototype_pollution.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","width","height","src","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,+NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,uBADR,uBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,yGAAwF,0BAAYC,WAAW,KAAvB,aAAxF,KAAmJ,0BAAYA,WAAW,KAAvB,aAAnJ,KAA8M,mBAAGA,WAAW,KAAQ,CAChO,KAAQ,iHADkM,oBAA9M,KAGA,mEAAkD,mBAAGA,WAAW,KAAQ,CACpE,KAAQ,4IADsC,eAAlD,KAGA,sBAAQC,MAAM,OAAOC,OAAO,MAAMC,IAAI,8CAEtC,8BACE,iBAAGH,WAAW,cAAd,ibAEA,kBAAIA,WAAW,cACb,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+CADQ,2BAKxB,8DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6KAQL,oDAAmC,0BAAYA,WAAW,KAAvB,kBACnC,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+UAYL,iBAAQ,CACN,GAAM,gBADR,gBAGA,+GACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,kBAAuC,0BAAYA,WAAW,MAAvB,OAAvC,SAAiG,0BAAYA,WAAW,MAAvB,WACjG,kBAAIA,WAAW,MAAf,SAA8B,mBAAGA,WAAW,MAAS,CACjD,KAAQ,4FADkB,8BAG9B,kBAAIA,WAAW,MAAf,4DAAiF,0BAAYA,WAAW,MAAvB,wBACjF,kBAAIA,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,4FAAiH,0BAAYA,WAAW,MAAvB,qCAEnH,iBAAQ,CACN,GAAM,QADR,QAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+CADQ,gDAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4IADQ,6HAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iGADQ,4E,6NAQ1BJ,EAAWQ,gBAAiB","file":"component---src-attacks-explained-prototype-pollution-mdx-b762e45cabbd302c4f66.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"prototype-pollution\"\n    }}>{`Prototype Pollution`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The Attack`}</h2>\n    <p>{`It's a technical attack that requires a great understanding of JS internals like `}<inlineCode parentName=\"p\">{`__proto__`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`prototype`}</inlineCode>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://we-are.bookmyshow.com/understanding-deep-and-shallow-copy-in-javascript-13438bad941c?gi=a658f8d5292b\"\n      }}>{`deep|shadow copy`}</a>{`.`}</p>\n    <p>{`This bug was extended in popular libraries `}<a parentName=\"p\" {...{\n        \"href\": \"https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/\"\n      }}>{`like Lodash`}</a>{`.`}</p>\n    <iframe width=\"100%\" height=\"450\" src=\"https://www.youtube.com/embed/LUsiFV3dsK8\">\n    </iframe>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Prototype Pollution is a vulnerability affecting JavaScript. Prototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects.\n(...) When that happens, it leads to either denial of service by triggering JavaScript exceptions, or it tampers with the application source code to force the code path the attacker injects, thereby leading to remote code execution`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\"><a parentName=\"li\" {...{\n            \"href\": \"https://snyk.io/vuln/SNYK-JS-LODASH-450202\"\n          }}>{`Snyk VulnerabilityDB`}</a></li>\n      </ul>\n    </blockquote>\n    <p>{`This is a raw pollution in vanilla js`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const a = {\"a\": 1, \"b\": 2}\nconst data = JSON.parse('{\"__proto__\": { \"polluted\": true}}')\n \nconst c = Object.assign({}, a, data)\nconsole.log(c.polluted) // true \n`}</code></pre>\n    <p>{`This was a vulnerability in `}<inlineCode parentName=\"p\">{`lodash@4.17.0`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// npm install lodash@4.17.0\n// https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.0/lodash.min.js\nconst mergeFn = require('lodash').defaultsDeep;\nconst payload = '{\"constructor\": {\"prototype\": {\"polluted\": true}}}'\n \nmergeFn({}, JSON.parse(payload));\n \nconst newObject = {}\nconsole.log(newObject.polluted) //true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The solution`}</h2>\n    <p>{`There are no definitive solutions to avoid this attack but it can be highly mitigated.`}</p>\n    <h2 {...{\n      \"id\": \"mitigation\"\n    }}>{`Mitigation`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`If you can use `}<inlineCode parentName=\"li\">{`Map`}</inlineCode>{` over `}<inlineCode parentName=\"li\">{`Object`}</inlineCode></li>\n      <li parentName=\"ul\">{`Avoid `}<a parentName=\"li\" {...{\n          \"href\": \"https://gist.github.com/DaniAkash/b3d7159fddcff0a9ee035bd10e34b277#file-unsafe-merge-js\"\n        }}>{`insecure recursive merges`}</a></li>\n      <li parentName=\"ul\">{`Use objects without prototype for recursive merges, like `}<inlineCode parentName=\"li\">{`Object.create(null)`}</inlineCode></li>\n      <li parentName=\"ul\">{`Try to implement JSON Schema validations`}</li>\n      <li parentName=\"ul\">{`As an extra mile you can freeze the prototype, but this can be a potential bad practice: `}<inlineCode parentName=\"li\">{`Object.freeze(Object.prototype)`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://snyk.io/vuln/SNYK-JS-LODASH-450202\"\n        }}>{`SNYK-JS-LODASH-450202 | Prototype Pollution`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://snyk.io/blog/snyk-research-team-discovers-severe-prototype-pollution-security-vulnerabilities-affecting-all-versions-of-lodash/\"\n        }}>{`Snyk | Snyk research team discovers severe prototype pollution security vulnerabilities affecting all versions of Lodash`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://we-are.bookmyshow.com/understanding-deep-and-shallow-copy-in-javascript-13438bad941c\"\n        }}>{`Manjula Dube | Understanding Deep and Shallow Copy in Javascript`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}