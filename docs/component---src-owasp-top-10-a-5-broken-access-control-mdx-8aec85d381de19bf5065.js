(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{jJCT:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return l}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),c=n("TjRS");n("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/owasp_top_10/a5_broken_access_control.mdx"}});var r={_frontmatter:i},s=c.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,c={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,["components"]);return Object(a.b)(s,o({},r,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"a5-broken-access-control"},"A5 Broken Access Control"),Object(a.b)("h2",{id:"definition"},"Definition"),Object(a.b)("p",null,"Restrictions on what authenticated users are allowed to do are often not properly enforced.\nAttackers can exploit these flaws to access unauthorized functionality and/or data, such as access\nother users' accounts, view sensitive files, modify other users‚Äô data, change access rights, etc."),Object(a.b)("h2",{id:"risk-factor-summary"},"Risk Factor Summary"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Score: 6.0"),Object(a.b)("li",{parentName:"ul"},"Attack Vectors Exploitability: 2"),Object(a.b)("li",{parentName:"ul"},"Security Weakness Prevalence: 2"),Object(a.b)("li",{parentName:"ul"},"Security Weakness Detectability: 2"),Object(a.b)("li",{parentName:"ul"},"Impact Technical: 3")),Object(a.b)("h2",{id:"context"},"Context"),Object(a.b)("iframe",{width:"100%",height:"450",src:"https://www.youtube.com/embed/P38at6Tp8Ms"}),Object(a.b)("p",null,"Exploitation of access control is a\ncore skill of attackers. SAST and\nDAST tools can detect the absence of\naccess control but cannot verify if it is\nfunctional when it is present. Access\ncontrol is detectable using manual\nmeans, or possibly through\nautomation for the absence of access\ncontrols in certain frameworks."),Object(a.b)("p",null,"Access control weaknesses are common due to the\nlack of automated detection, and lack of effective\nfunctional testing by application developers.\nAccess control detection is not typically amenable to\nautomated static or dynamic testing. Manual testing\nis the best way to detect missing or ineffective\naccess control, including HTTP method (GET vs\nPUT, etc), controller, direct object references, etc."),Object(a.b)("p",null,"The technical impact is attackers\nacting as users or administrators, or\nusers using privileged functions, or\ncreating, accessing, updating or\ndeleting every record.\nThe business impact depends on the\nprotection needs of the application\nand data."),Object(a.b)("h2",{id:"is-the-application-vulnerable"},"Is the Application Vulnerable?"),Object(a.b)("p",null,"Access control enforces policy such that users cannot act\noutside of their intended permissions. Failures typically lead to\nunauthorized information disclosure, modification or destruction\nof all data, or performing a business function outside of the limits\nof the user. Common access control vulnerabilities include:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Bypassing access control checks by modifying the URL,\ninternal application state, or the HTML page, or simply using a\ncustom API attack tool."),Object(a.b)("li",{parentName:"ul"},"Allowing the primary key to be changed to another users\nrecord, permitting viewing or editing someone else's account."),Object(a.b)("li",{parentName:"ul"},"Elevation of privilege. Acting as a user without being logged in,\nor acting as an admin when logged in as a user."),Object(a.b)("li",{parentName:"ul"},"Metadata manipulation, such as replaying or tampering with a\nJSON Web Token (JWT) access control token or a cookie or\nhidden field manipulated to elevate privileges, or abusing JWT\ninvalidation"),Object(a.b)("li",{parentName:"ul"},"CORS misconfiguration allows unauthorized API access."),Object(a.b)("li",{parentName:"ul"},"Force browsing to authenticated pages as an unauthenticated\nuser or to privileged pages as a standard user. Accessing API\nwith missing access controls for POST, PUT and DELETE.")),Object(a.b)("h2",{id:"conceptual-attacks"},"Conceptual Attacks"),Object(a.b)("h3",{id:"scenario-1"},"Scenario #1:"),Object(a.b)("p",null,"The application uses unverified data in a SQL call\nthat is accessing account information:"),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-js"}),"const acct = req.params.query\nconst query = session.createQuery(`FROM accounts\nWHERE accountId='${acct}'`);\n")),Object(a.b)("p",null,"An attacker simply modifies the 'acct' parameter in the browser to\nsend whatever account number they want. If not properly\nverified, the attacker can access any user's account."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"http://example.com/app/accountInfo?acct=notmyacct\n")),Object(a.b)("h3",{id:"scenario-2"},"Scenario #2:"),Object(a.b)("p",null,"An attacker simply force browses to target URLs.\nAdmin rights are required for access to the admin page."),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{}),"http://example.com/app/getappInfo\nhttp://example.com/app/admin_getappInfo\n")),Object(a.b)("p",null,"If an unauthenticated user can access either page, it‚Äôs a flaw. If a\nnon-admin can access the admin page, this is a flaw."),Object(a.b)("h2",{id:"how-to-prevent"},"How to Prevent"),Object(a.b)("p",null,"Access control is only effective if enforced in trusted server-side\ncode or server-less API, where the attacker cannot modify the\naccess control check or metadata."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"With the exception of public resources, deny by default."),Object(a.b)("li",{parentName:"ul"},"Implement access control mechanisms once and re-use them\nthroughout the application, including minimizing CORS usage."),Object(a.b)("li",{parentName:"ul"},"Model access controls should enforce record ownership, rather\nthan accepting that the user can create, read, update, or delete\nany record."),Object(a.b)("li",{parentName:"ul"},"Unique application business limit requirements should be\nenforced by domain models."),Object(a.b)("li",{parentName:"ul"},"Disable web server directory listing and ensure file metadata\n(e.g. .git) and backup files are not present within web roots."),Object(a.b)("li",{parentName:"ul"},"Log access control failures, alert admins when appropriate\n(e.g. repeated failures)."),Object(a.b)("li",{parentName:"ul"},"Rate limit API and controller access to minimize the harm from\nautomated attack tooling."),Object(a.b)("li",{parentName:"ul"},"JWT tokens should be invalidated on the server after logout.\nDevelopers and QA staff should include functional access control\nunit and integration tests.")),Object(a.b)("h2",{id:"hacking-playground"},"Hacking Playground"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://nodegoat.herokuapp.com/tutorial/a7"}),"üêê NodeGoat |¬†A7 Broken Access Control")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://pwning.owasp-juice.shop/part2/broken-access-control.html"}),"üßÉ Pwning OWASP Juice Shop | A5 Broken Access Control"))),Object(a.b)("h2",{id:"references"},"References"),Object(a.b)("h3",{id:"owasp"},"OWASP"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://cheatsheetseries.owasp.org/cheatsheets/Access_Control_Cheat_Sheet.html"}),"OWASP Cheat Sheet: Access Control"))),Object(a.b)("h3",{id:"cwes"},"CWEs"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://cwe.mitre.org/data/definitions/22.html"}),"CWE-22: Improper Limitation of a Pathname to a Restricted Directory (‚ÄòPath Traversal‚Äô)")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://cwe.mitre.org/data/definitions/284.html"}),"CWE-284: Improper Access Control (Authorization)")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://cwe.mitre.org/data/definitions/285.html"}),"CWE-285: Improper Authorization")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",o({parentName:"li"},{href:"https://cwe.mitre.org/data/definitions/639.html"}),"CWE-639: Authorization Bypass Through User-Controlled Key"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/owasp_top_10/a5_broken_access_control.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-owasp-top-10-a-5-broken-access-control-mdx-8aec85d381de19bf5065.js.map