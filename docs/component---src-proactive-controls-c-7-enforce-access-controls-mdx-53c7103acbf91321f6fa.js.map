{"version":3,"sources":["webpack:///../src/proactive_controls/c7_enforce_access_controls.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,uOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,qBAAG,kBAAIC,WAAW,KAAf,mCAAuD,mBAAGA,WAAW,MAAS,CAC3E,KAAQ,oEAD4C,mBAG1D,iBAAQ,CACN,GAAM,8BADR,+BAGA,iBAAQ,CACN,GAAM,eADR,eAGA,2wBAUA,sBACE,kBAAIA,WAAW,MAAf,wOAGA,kBAAIA,WAAW,MAAf,sSAIA,kBAAIA,WAAW,MAAf,oMAGA,kBAAIA,WAAW,MAAf,uQAKF,iBAAQ,CACN,GAAM,kBADR,kBAGA,iBAAQ,CACN,GAAM,oCADR,oCAGA,iBAAQ,CACN,GAAM,+CADR,gDAGA,uaAKA,oUAIA,iBAAQ,CACN,GAAM,4DADR,6DAGA,oTAIA,iBAAQ,CACN,GAAM,uGADR,0GAGA,oHACA,sBACE,kBAAIA,WAAW,MAAf,sJAEA,kBAAIA,WAAW,MAAf,8KAEA,kBAAIA,WAAW,MAAf,kIAGF,iBAAQ,CACN,GAAM,kCADR,mCAGA,sOAGA,iBAAQ,CACN,GAAM,yBADR,2BAGA,oLAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qFAML,oIAEA,sBACE,kBAAIA,WAAW,MAAf,qHAEA,kBAAIA,WAAW,MAAf,qOAGA,kBAAIA,WAAW,MAAf,gGAEA,kBAAIA,WAAW,MAAf,wNAIF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,mEAML,wRAGA,iBAAQ,CACN,GAAM,mCADR,oCAGA,kKAEA,iBAAQ,CACN,GAAM,wBADR,wBAGA,iBAAQ,CACN,GAAM,0CADR,0CAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sCADQ,mCAItB,iBAAQ,CACN,GAAM,iDADR,iDAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qFADQ,sC,qOAQ1BJ,EAAWK,gBAAiB","file":"component---src-proactive-controls-c-7-enforce-access-controls-mdx-53c7103acbf91321f6fa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><em parentName=\"p\">{`ℹ️ This section will be part of `}<a parentName=\"em\" {...{\n          \"href\": \"https://github.com/guidesmiths/cybersecurity-handbook/issues/41\"\n        }}>{`1.0.0 Release`}</a></em></p>\n    <h1 {...{\n      \"id\": \"c7-enforce-access-controls\"\n    }}>{`C7: Enforce Access Controls`}</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Access Control (or Authorization) is the process of granting or denying specific requests from\na user, program, or process. Access control also involves the act of granting and revoking\nthose privileges.\nIt should be noted that authorization (verifying access to specific features or resources) is not\nequivalent to authentication (verifying identity).\nAccess Control functionality often spans many areas of software depending on the\ncomplexity of the access control system. For example, managing access control metadata or\nbuilding caching for scalability purposes are often additional components in an access control\nsystem that need to be built or managed.\nThere are several different types of access control design that should be considered.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Discretionary Access Control (DAC) is a means of restricting access to objects (e.g.,\nfiles, data entities) based on the identity and need-to-know of subjects (e.g., users,\nprocesses) and/or groups to which the object belongs.`}</li>\n      <li parentName=\"ul\">{`Mandatory Access Control (MAC) is a means of restricting access to system resources\nbased on the sensitivity (as represented by a label) of the information contained in\nthe system resource and the formal authorization (i.e., clearance) of users to access\ninformation of such sensitivity.`}</li>\n      <li parentName=\"ul\">{`Role Based Access Control (RBAC) is a model for controlling access to resources where\npermitted actions on resources are identified with roles rather than with individual\nsubject identities.`}</li>\n      <li parentName=\"ul\">{`Attribute Based Access Control (ABAC) will grant or deny user requests based on\narbitrary attributes of the user and arbitrary attributes of the object, and\nenvironment conditions that may be globally recognized and more relevant to the\npolicies at hand. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"implementation\"\n    }}>{`Implementation`}</h2>\n    <h3 {...{\n      \"id\": \"access-control-design-principles\"\n    }}>{`Access Control Design Principles`}</h3>\n    <h4 {...{\n      \"id\": \"1-design-access-control-thoroughly-up-front\"\n    }}>{`1. Design Access Control Thoroughly Up Front`}</h4>\n    <p>{`Once you have chosen a specific access control design pattern, it is often difficult and time\nconsuming to re-engineer access control in your application with a new pattern. Access\nControl is one of the main areas of application security design that must be thoroughly\ndesigned up front, especially when addressing requirements like multi-tenancy and\nhorizontal (data dependent) access control.`}</p>\n    <p>{`Access Control design may start simple but can often grow into a complex and feature-heavy\nsecurity control. When evaluating access control capability of software frameworks, ensure\nthat your access control functionality will allow for customization for your specific access\ncontrol feature need.`}</p>\n    <h4 {...{\n      \"id\": \"2-force-all-requests-to-go-through-access-control-checks\"\n    }}>{`2. Force All Requests to Go Through Access Control Checks`}</h4>\n    <p>{`Ensure that all request go through some kind of access control verification layer.\nTechnologies like Java filters or other automatic request processing mechanisms are ideal\nprogramming artifacts that will help ensure that all requests go through some kind of access\ncontrol check.`}</p>\n    <h4 {...{\n      \"id\": \"3-deny-by-default-is-the-principle-that-if-a-request-is-not-specifically-allowed-it-is-denied-there\"\n    }}>{`3. Deny by default is the principle that if a request is not specifically allowed, it is denied. There`}</h4>\n    <p>{`are many ways that this rule will manifest in application code. Some examples of these are:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Application code may throw an error or exception while processing access control\nrequests. In these cases access control should always be denied.`}</li>\n      <li parentName=\"ol\">{`When an administrator creates a new user or a user registers for a new account, that\naccount should have minimal or no access by default until that access is configured.`}</li>\n      <li parentName=\"ol\">{`When a new feature is added to an application all users should be denied to use that\nfeature until it's properly configured.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"4-principle-of-least-privilege\"\n    }}>{`4. Principle of Least Privilege`}</h4>\n    <p>{`Ensure that all users, programs, or processes are only given as least or as little necessary\naccess as possible. Be wary of systems that do not provide granular access control\nconfiguration capabilities.`}</p>\n    <h4 {...{\n      \"id\": \"5-dont-hardcode-roles\"\n    }}>{`5. Don't Hardcode Roles`}</h4>\n    <p>{`Many application frameworks default to access control that is role based. It is common to\nfind application code that is filled with checks of this nature.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (user.hasRole(\"ADMIN\")) || (user.hasRole(\"MANAGER\")) {\ndeleteAccount();\n}\n`}</code></pre>\n    <p>{`Be careful about this type of role-based programming in code. It has the following limitations\nor dangers.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Role based programming of this nature is fragile. It is easy to create incorrect or\nmissing role checks in code.`}</li>\n      <li parentName=\"ul\">{`Role based programming does not allow for multi-tenancy. Extreme measures like\nforking the code or added checks for each customer will be required to allow role\nbased systems to have different rules for different customers.`}</li>\n      <li parentName=\"ul\">{`Role based programming does not allow for data-specific or horizontal access control\nrules.`}</li>\n      <li parentName=\"ul\">{`Large codebases with many access control checks can be difficult to audit or verify the\noverall application access control policy.\nInstead, please consider the following access control programming methodology:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`if (user.hasAccess(\"DELETE_ACCOUNT\")) {\ndeleteAccount();\n}\n`}</code></pre>\n    <p>{`Attribute or feature-based access control checks of this nature are the starting point to\nbuilding well-designed and feature-rich access control systems. This type of programming\nalso allows for greater access control customization capability over time.`}</p>\n    <h4 {...{\n      \"id\": \"6-log-all-access-control-events\"\n    }}>{`6. Log All Access Control Events`}</h4>\n    <p>{`All access control failures should be logged as these may be indicative of a malicious user\nprobing the application for vulnerabilities.`}</p>\n    <h2 {...{\n      \"id\": \"specific-mitigations\"\n    }}>{`Specific Mitigations`}</h2>\n    <h3 {...{\n      \"id\": \"owasp-top-10-vulnerabilities-mitigated\"\n    }}>{`OWASP Top 10 Vulnerabilities Mitigated`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/./owasp/a5_broken_access_control\"\n        }}>{`A5:2017-Broken Access Control`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"owasp-mobile-top-10-vulnerabilities-mitigated\"\n    }}>{`OWASP Mobile Top 10 Vulnerabilities Mitigated`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://owasp.org/www-project-mobile-top-10/2016-risks/m6-insecure-authorization\"\n        }}>{`M6: Insecure Authorization`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}