{"version":3,"sources":["webpack:///../src/http_headers/crossdomain.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,iDADR,kDAGA,iBAAQ,CACN,GAAM,cADR,cAGA,kOACA,iBAAQ,CACN,GAAM,cADR,cAGA,4BAAW,0BAAYC,WAAW,KAAvB,qCAAX,4LACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8CAEL,wIACA,iBAAQ,CACN,GAAM,YADR,YAGA,iCAAgB,0BAAYA,WAAW,KAAvB,eAAhB,yFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8IAOL,iBAAQ,CACN,GAAM,QADR,SAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,+CAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2EADQ,oD,gNAQ1BJ,EAAWK,gBAAiB","file":"component---src-http-headers-crossdomain-mdx-1a8208fcbf255d4a02e5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"http-header-x-permitted-cross-domain-policies\"\n    }}>{`HTTP Header: X-Permitted-Cross-Domain-Policies`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The attack`}</h2>\n    <p>{`Adobe Flash and Adobe Acrobat can load content from your domain even from other sites (in other words, cross-domain). This could cause unexpected data disclosure in rare cases or extra bandwidth usage.`}</p>\n    <h2 {...{\n      \"id\": \"the-header\"\n    }}>{`The header`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`X-Permitted-Cross-Domain-Policies`}</inlineCode>{` header tells clients like Flash and Acrobat what cross-domain policies they can use. If you don’t want them to load data from your domain, set the header’s value to none. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`X-Permitted-Cross-Domain-Policies: none\n`}</code></pre>\n    <p>{`If Flash loads something from your site and sees that, it’ll know that it shouldn’t load data from your domain.`}</p>\n    <h2 {...{\n      \"id\": \"the-code\"\n    }}>{`The code`}</h2>\n    <p>{`Helmet’s `}<inlineCode parentName=\"p\">{`crossdomain`}</inlineCode>{` middleware prevents Adobe Flash and Adobe Acrobat from loading content on your site.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const helmet = require('helmet')\n\n// Sets \"X-Permitted-Cross-Domain-Policies: none\"\napp.use(helmet.permittedCrossDomainPolicies())\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs:`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://helmetjs.github.io/docs/crossdomain\"\n        }}>{`Helmet | X-Permitted-Cross-Domain-Policies`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/xdomain.html\"\n        }}>{`Adobe Flash | Cross Domain Configuration`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}