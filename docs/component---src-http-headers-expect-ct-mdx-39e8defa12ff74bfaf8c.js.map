{"version":3,"sources":["webpack:///../src/http_headers/expect-ct.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,gNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,yBADR,0BAGA,iBAAQ,CACN,GAAM,cADR,cAGA,8BACE,iBAAGC,WAAW,cAAd,yWACJ,kBAAIA,WAAW,KAAf,MAA0B,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0DADQ,sBAIxB,iBAAQ,CACN,GAAM,cADR,cAGA,4BAAW,0BAAYA,WAAW,KAAvB,aAAX,mEACA,iBAAQ,CACN,GAAM,YADR,YAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,qPAeL,+HAA8G,mBAAGA,WAAW,KAAQ,CAChI,KAAQ,wEADkG,uBAA9G,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,kMASL,iBAAQ,CACN,GAAM,QADR,SAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,uBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mFADQ,mCAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wEADQ,oBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8DADQ,mDAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uEADQ,mE,8MAQ1BJ,EAAWK,gBAAiB","file":"component---src-http-headers-expect-ct-mdx-39e8defa12ff74bfaf8c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"http-header-expect-ct\"\n    }}>{`HTTP Header: Expect-CT`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The attack`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Expect-CT is an HTTP header that allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements, which prevents the use of misissued certificates for that site from going unnoticed. When a site enables the Expect-CT header, they are requesting that Chrome check that any certificate for that site appears in public CT logs.\n`}<em parentName=\"p\">{`by `}<a parentName=\"em\" {...{\n            \"href\": \"https://www.chromestatus.com/feature/5677171733430272\"\n          }}>{`Chrome platform`}</a></em></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"the-header\"\n    }}>{`The header`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Expect-CT`}</inlineCode>{` HTTP header tells browsers to expect Certificate Transparency.`}</p>\n    <h2 {...{\n      \"id\": \"the-code\"\n    }}>{`The code`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const helmet = require('helmet')\n\napp.use(helmet())\n\n// Sets Expect-CT: max-age=123\napp.use(helmet.expectCt({ maxAge: 123 }))\n\n// Sets Expect-CT: enforce; max-age=123\napp.use(helmet.expectCt({\n  enforce: true,\n  maxAge: 123\n}))\n`}</code></pre>\n    <p>{`You can define a report url. This will help you to analyze the impact on your users with old browsers. `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT\"\n      }}>{`Check compatibility`}</a>{` `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Sets Expect-CT: enforce; max-age=30; report-uri=\"http://example.com/report\"\napp.use(helmet.expectCt({\n  enforce: true,\n  maxAge: 30,\n  reportUri: 'http://example.com/report'\n}))\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs:`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://helmetjs.github.io/docs/expect-ct\"\n        }}>{`Helmet | Expect-CT`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Security/Certificate_Transparency\"\n        }}>{`MDN | Certificate Transparency`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT\"\n        }}>{`MDN | Expect-CT`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://scotthelme.co.uk/a-new-security-header-expect-ct/\"\n        }}>{`Scott Helme | A new security header: Expect-CT`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://scotthelme.co.uk/certificate-transparency-an-introduction/\"\n        }}>{`Scott Helme | Certificate Transparency, an introduction`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}