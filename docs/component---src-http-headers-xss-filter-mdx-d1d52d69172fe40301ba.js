(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{"7A88":function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return a})),r.d(t,"default",(function(){return l}));r("5hJT"),r("W1QL"),r("K/PF"),r("t91x"),r("75LO"),r("PJhk"),r("mXGw");var o=r("/FXl"),i=r("TjRS");r("aD51");function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}var a={};void 0!==a&&a&&a===Object(a)&&Object.isExtensible(a)&&!a.hasOwnProperty("__filemeta")&&Object.defineProperty(a,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/http_headers/xss_filter.mdx"}});var s={_frontmatter:a},c=i.a;function l(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,["components"]);return Object(o.b)(c,n({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"http-header-xss-filter"},"HTTP Header: XSS Filter"),Object(o.b)("h2",{id:"the-attack"},"The attack"),Object(o.b)("p",null,"One kind of XSS is called “Reflected XSS”. Typically, it works by setting a query string which is put directly into the HTML. Putting JavaScript in the query string can let an attacker execute their JavaScript just by giving someone a malicious query string."),Object(o.b)("iframe",{width:"100%",height:"450",src:"https://www.youtube.com/embed/9xyRKZbv5kQ"}),Object(o.b)("h2",{id:"the-header"},"The header"),Object(o.b)("p",null,"To be very clear: this header does not protect you from XSS attacks much. It protects against a very particular kind of XSS, and other mitigation measures are far better. This header provides a quick win and basic protection, but this header does not save you from XSS attacks."),Object(o.b)("p",null,"It’s relatively easy for browsers to detect simple reflected XSS. In the example above, browsers could choose not to execute the JavaScript inside a ",Object(o.b)("inlineCode",{parentName:"p"},"<script>")," tag if it matches what’s in the query string. Some browsers do this detection by default, but some don’t. To make these browsers check for this simple case, you can set the ",Object(o.b)("inlineCode",{parentName:"p"},"X-XSS-Protection")," header to ",Object(o.b)("inlineCode",{parentName:"p"},"1; mode=block"),"."),Object(o.b)("p",null,"This tells browsers to detect and block reflected XSS."),Object(o.b)("p",null,"Note: This header causes some even worse security vulnerabilities in older versions of Internet Explorer, so it’s wise to disable it there."),Object(o.b)("h2",{id:"the-code"},"The code"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"xssFilter")," middleware sets the ",Object(o.b)("inlineCode",{parentName:"p"},"X-XSS-Protection")," header to prevent reflected XSS attacks."),Object(o.b)("pre",null,Object(o.b)("code",n({parentName:"pre"},{className:"language-js"}),"const helmet = require('helmet')\n\n// Sets \"X-XSS-Protection: 1; mode=block\".\napp.use(helmet.xssFilter())\n")),Object(o.b)("h4",{id:"report-violations"},"Report violations"),Object(o.b)("p",null,"You can also optionally configure a report URI, though the flag is specific to ",Object(o.b)("a",n({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection"}),"Chrome-based browsers"),". "),Object(o.b)("p",null,"This option will report the violation to the specified URI:"),Object(o.b)("pre",null,Object(o.b)("code",n({parentName:"pre"},{className:"language-js"}),"const helmet = require('helmet')\n\n// Sets \"X-XSS-Protection: 1; report=/report-xss-violation; mode=block\".\napp.use(xssFilter({ reportUri: '/report-xss-violation' }))\n")),Object(o.b)("h3",{id:"refs"},"Refs:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",n({parentName:"li"},{href:"https://helmetjs.github.io/docs/xss-filter"}),"Helmet | XSS Filter"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/http_headers/xss_filter.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-http-headers-xss-filter-mdx-d1d52d69172fe40301ba.js.map