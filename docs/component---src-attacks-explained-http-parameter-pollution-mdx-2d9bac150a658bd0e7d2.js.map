{"version":3,"sources":["webpack:///../src/attacks_explained/http_parameter_pollution.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","width","height","src","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,oOAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,gCADR,kCAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBAAQC,MAAM,OAAOC,OAAO,MAAMC,IAAI,8CAEtC,6DAA4C,mBAAGC,WAAW,KAAQ,CAC9D,KAAQ,wCADgC,sBAA5C,0DAGA,6CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8LASL,iDACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wCAIL,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6DAIL,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2FAIL,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6EAGL,gKACA,sBACE,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,oEAEF,iBAAQ,CACN,GAAM,gBADR,gBAGA,sBACE,kBAAIA,WAAW,MAAf,6EAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6TAaL,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,4DAGL,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sEAGL,iBAAQ,CACN,GAAM,QADR,QAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8GADQ,wF,kOAQ1BP,EAAWQ,gBAAiB","file":"component---src-attacks-explained-http-parameter-pollution-mdx-2d9bac150a658bd0e7d2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"http-parameter-pollution-hpp\"\n    }}>{`HTTP Parameter Pollution (HPP)`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The Attack`}</h2>\n    <iframe width=\"100%\" height=\"450\" src=\"https://www.youtube.com/embed/QVZBl8yxVX0\">\n    </iframe>\n    <p>{`There are some corner cases that the `}<a parentName=\"p\" {...{\n        \"href\": \"https://tools.ietf.org/html/rfc2616\"\n      }}>{`HTTP Specification`}</a>{` doesn't cover like HTTP Parameter Pollution or HTTP. `}</p>\n    <p>{`Check out this code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const express = require('express')\nconst app = express()\n\napp.get('/films', (req, res) => res.json(req.query))\n\napp.listen(8080, () => console.log('Check http://localhost:8080'))\n`}</code></pre>\n    <p>{`Check out the responses:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films\n\n{}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films?actor=Me\n\n{\"actor\":\"Me\"}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films?actor=Me&director=You\n\n{\"actor\":\"Me\",\"director\":\"You\"}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films?actor=Me&actor=You\n{\"actor\":[\"Me\",\"You\"]}\n`}</code></pre>\n    <p>{`In the case of Express if the query param is redefined again we will receive an array, this can lead to many unexpected scenarios like:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Type Errors uncaught that can lead to DoS attacks`}</li>\n      <li parentName=\"ul\">{`Unexpected data that can modify the behavior of our application`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The solution`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Check the expected type and implement a strong error handling mechanism.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const express = require('express')\nconst app = express()\n\napp.get('/films', (req, res) => {\n    const { query } = req\n    let actor = Array.isArray(query.actor) ? query.actor[0] : query.actor;\n    res.send(\\`The actor is \\${actor}\\`)\n})\n\napp.listen(8080, () => console.log('Check http://localhost:8080'))\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films?actor=Me\nThe actor is Me\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`http://localhost:8080/films?actor=Me&actor=You\nThe actor is Me\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=48\"\n        }}>{`ckarande | Top Overlooked Security Threats to Node.js Web Applications | HPP`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}