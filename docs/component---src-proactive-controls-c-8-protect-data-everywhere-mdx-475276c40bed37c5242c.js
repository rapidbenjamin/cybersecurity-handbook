(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{x915:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return r})),a.d(t,"default",(function(){return l}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk"),a("mXGw");var i=a("/FXl"),n=a("TjRS");a("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/proactive_controls/c8_protect_data_everywhere.mdx"}});var s={_frontmatter:r},c=n.a;function l(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)a=o[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(i.b)(c,o({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"ℹ️ This section will be part of ",Object(i.b)("a",o({parentName:"em"},{href:"https://github.com/guidesmiths/cybersecurity-handbook/issues/41"}),"1.0.0 Release"))),Object(i.b)("h1",{id:"c8-protect-data-everywhere"},"C8: Protect Data Everywhere"),Object(i.b)("h2",{id:"description"},"Description"),Object(i.b)("p",null,"Sensitive data such as passwords, credit card numbers, health records, personal information\nand business secrets require extra protection, particularly if that data falls under privacy laws\n(EU's General Data Protection Regulation GDPR), financial data protection rules such as PCI\nData Security Standard (PCI DSS) or other regulations."),Object(i.b)("p",null,"Attackers can steal data from web and webservice applications in a number of ways. For\nexample, if sensitive information in sent over the internet without communications security,\nthen an attacker on a shared wireless connection could see and steal another user’s data.\nAlso, an attacker could use SQL Injection to steal passwords and other credentials from an\napplications database and expose that information to the public."),Object(i.b)("h2",{id:"implementation"},"Implementation"),Object(i.b)("h3",{id:"data-classification"},"Data Classification"),Object(i.b)("p",null,"It's critical to classify data in your system and determine which level of sensitivity each piece\nof data belongs to. Each data category can then be mapped to protection rules necessary for\neach level of sensitivity. For example, public marketing information that is not sensitive may\nbe categorized as public data which is ok to place on the public website. Credit card numbers\nmay be classified as private user data which may need to be encrypted while stored or in\ntransit."),Object(i.b)("h3",{id:"encrypting-data-in-transit"},"Encrypting Data in Transit"),Object(i.b)("p",null,"When transmitting sensitive data over any network, end-to-end communications security (or\nencryption-in-transit) of some kind should be considered. TLS is by far the most common and\nwidely supported cryptographic protocol for communications security. It is used by many\ntypes of applications (web, webservice, mobile) to communicate over a network in a secure\nfashion. TLS must be properly configured in a variety of ways in order to properly defend\nsecure communications."),Object(i.b)("p",null,"The primary benefit of transport layer security is the protection of web application data from\nunauthorized disclosure and modification when it is transmitted between clients (web\nbrowsers) and the web application server, and between the web application server and back\nend and other non-browser based enterprise components."),Object(i.b)("h3",{id:"encrypting-data-at-rest"},"Encrypting Data at Rest"),Object(i.b)("p",null,"The first rule of sensitive data management is to avoid storing sensitive data when at all\npossible. If you must store sensitive data then make sure it's cryptographically protected in\nsome way to avoid unauthorized disclosure and modification."),Object(i.b)("p",null,"Cryptography (or crypto) is one of the more advanced topics of information security, and one\nwhose understanding requires the most schooling and experience. It is difficult to get right\nbecause there are many approaches to encryption, each with advantages and disadvantages\nthat need to be thoroughly understood by web solution architects and developers. In\naddition, serious cryptography research is typically based in advanced mathematics and\nnumber theory, providing a serious barrier to entry."),Object(i.b)("p",null,"Instead of building cryptographic capability from scratch, it is strongly recommended that\npeer reviewed and open solutions be used, such as the ",Object(i.b)("a",o({parentName:"p"},{href:"https://github.com/google/tink"}),"Google Tink")," project, ",Object(i.b)("a",o({parentName:"p"},{href:"https://www.libsodium.org/"}),"Libsodium"),", and\nsecure storage capability built into many software frameworks and cloud services. "),Object(i.b)("h4",{id:"mobile-application-secure-local-storage"},"Mobile Application: Secure Local Storage"),Object(i.b)("p",null,"Mobile applications are at particular risk of data leakage because mobile devices are regularly\nlost or stolen yet contain sensitive data."),Object(i.b)("p",null,"As a general rule, only the minimum data required should be stored on the mobile device.\nBut if you must store sensitive data on a mobile device, then sensitive data should be stored\nwithin each mobile operating systems specific data storage directory. On Android this will be\nthe Android keystore and on iOS this will be the iOS keychain."),Object(i.b)("h4",{id:"key-lifecycle"},"Key Lifecycle"),Object(i.b)("p",null,"Secret keys are used in applications number of sensitive functions. For example, secret keys\ncan be used to to sign JWTs, protect credit cards, provide various forms of authentication as\nwell as facilitation other sensitive security features. In managing keys, a number of rules\nshould be followed including:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ensure that any secret key is protected from unauthorized access"),Object(i.b)("li",{parentName:"ul"},"Store keys in a proper secrets vault as described below"),Object(i.b)("li",{parentName:"ul"},"Use independent keys when multiple keys are required"),Object(i.b)("li",{parentName:"ul"},"Build support for changing algorithms and keys when needed"),Object(i.b)("li",{parentName:"ul"},"Build application features to handle a key rotation")),Object(i.b)("h4",{id:"application-secrets-management"},"Application Secrets Management"),Object(i.b)("p",null,'Applications contain numerous "secrets" that are needed for security operations. These\ninclude certificates, SQL connection passwords, third party service account credentials,\npasswords, SSH keys, encryption keys and more. The unauthorized disclosure or modification\nof these secrets could lead to complete system compromise. In managing application secrets,\nconsider the following.'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Don’t store secrets in code, config files or pass them through environment variables.\nUse tools like ",Object(i.b)("a",o({parentName:"li"},{href:"https://github.com/michenriksen/gitrob"}),"GitRob")," or ",Object(i.b)("a",o({parentName:"li"},{href:"https://github.com/dxa4481/truffleHog"}),"TruffleHog")," to scan code repos for secrets."),Object(i.b)("li",{parentName:"ul"},"Keep keys and your other application-level secrets in a secrets vault like ",Object(i.b)("a",o({parentName:"li"},{href:"https://github.com/square/keywhiz"}),"KeyWhiz")," or\n",Object(i.b)("a",o({parentName:"li"},{href:"https://www.vaultproject.io/"}),"Hashicorp’s Vault")," project or ",Object(i.b)("a",o({parentName:"li"},{href:"https://aws.amazon.com/kms/"}),"Amazon KMS")," to provide secure storage and access to\napplication-level secrets at run-time. ")),Object(i.b)("h2",{id:"specific-mitigations"},"Specific Mitigations"),Object(i.b)("h3",{id:"owasp-top-10-vulnerabilities-mitigated"},"OWASP Top 10 Vulnerabilities Mitigated"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"/cybersecurity-handbook/owasp/a3_sensitived_data_exposure"}),"A3:2017-Sensitive Data Exposure"))),Object(i.b)("h3",{id:"owasp-mobile-top-10-vulnerabilities-mitigated"},"OWASP Mobile Top 10 Vulnerabilities Mitigated"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://owasp.org/www-project-mobile-top-10/2016-risks/m2-insecure-data-storage"}),"M2: Insecure Data Storage")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://owasp.org/www-project-mobile-top-10/2016-risks/m3-insecure-communication"}),"M3: Insecure Communication"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/proactive_controls/c8_protect_data_everywhere.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-proactive-controls-c-8-protect-data-everywhere-mdx-475276c40bed37c5242c.js.map