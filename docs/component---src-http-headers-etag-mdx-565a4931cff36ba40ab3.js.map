{"version":3,"sources":["webpack:///../src/http_headers/etag.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,qBAGA,8BAAa,mBAAGC,WAAW,KAAQ,CAC/B,KAAQ,mEADC,8BAAb,KAGA,2VACA,+WACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,uEAGL,8IACA,0CAAyB,mBAAGA,WAAW,KAAQ,CAC3C,KAAQ,2EADa,4BAAzB,KAGA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,6MAKL,iBAAQ,CACN,GAAM,cADR,cAGA,+HAA8G,mBAAGA,WAAW,KAAQ,CAChI,KAAQ,6DADkG,iBAA9G,qCAGA,8BACE,iBAAGA,WAAW,cAAd,yOACA,kBAAIA,WAAW,cACb,kBAAIA,WAAW,MAAf,SAA8B,mBAAGA,WAAW,MAAS,CACjD,KAAQ,yEADkB,8BAKlC,iBAAQ,CACN,GAAM,QADR,SAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,mEADQ,eAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yEADQ,4BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6DADQ,yB,yMAQ1BJ,EAAWK,gBAAiB","file":"component---src-http-headers-etag-mdx-565a4931cff36ba40ab3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"http-header-etag\"\n    }}>{`HTTP Header: ETag`}</h1>\n    <p>{`Based `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\"\n      }}>{`on MDN definition for ETag`}</a>{`:`}</p>\n    <p>{`The ETag HTTP response header is an identifier for a specific version of a resource. It lets caches be more efficient and save bandwidth, as a web server does not need to resend a full response if the content has not changed. Additionally, etags help prevent simultaneous updates of a resource from overwriting each other.`}</p>\n    <p>{`If the resource at a given URL changes, a new Etag value must be generated. A comparison of them can determine whether two representations of a resource are the same. Etags are therefore similar to fingerprints, and might also be used for tracking purposes by some servers. They might also be set to persist indefinitely by a tracking server.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\nETag: W/\"0815\"\n`}</code></pre>\n    <p>{`Note: 'W/*' indicates that a weak validator is used, so it is not valid for comparison (not byte-for-byte identical).`}</p>\n    <p>{`You can customize `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/expressjs/express/issues/2129#issuecomment-43965315\"\n      }}>{`the behaviour in Express`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`app.enable('etag') // use strong etags\napp.set('etag', 'strong') // same\napp.set('etag', 'weak') // weak etags\napp.set('etag', function(chunk, encoding){ /* return valid etag */ }) // your own fn\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The attack`}</h2>\n    <p>{`In the past sometimes the ETag was misconfigured by default using built string and not hashes, like in `}<a parentName=\"p\" {...{\n        \"href\": \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=2003-1418\"\n      }}>{`CVE-2003-1418`}</a>{` that leads to information leaks.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Apache HTTP server in certain configurations allows remote attackers to obtain sensitive information via (1) the ETag header, which reveals the inode number, or (2) multipart MIME boundary, which reveals child proccess IDs (PID).`}</p>\n      <ul parentName=\"blockquote\">\n        <li parentName=\"ul\">{`About `}<a parentName=\"li\" {...{\n            \"href\": \"https://www.rapid7.com/db/vulnerabilities/apache-httpd-cve-2003-1418\"\n          }}>{`cve-2003-1418 in rapid7`}</a></li>\n      </ul>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs:`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag\"\n        }}>{`MDN | ETag`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.rapid7.com/db/vulnerabilities/apache-httpd-cve-2003-1418\"\n        }}>{`Rapid 7 | CVE-2003-1418`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=2003-1418\"\n        }}>{`CVE-2003-1418`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}